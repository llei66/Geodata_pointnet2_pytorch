!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BASE_DIR	data_utils/collect_indoor3d_data.py	/^BASE_DIR = os.path.dirname(os.path.abspath(__file__))$/;"	v
BASE_DIR	data_utils/indoor3d_util.py	/^BASE_DIR = os.path.dirname(os.path.abspath(__file__))$/;"	v
BASE_DIR	test_cls.py	/^BASE_DIR = os.path.dirname(os.path.abspath(__file__))$/;"	v
BASE_DIR	test_partseg.py	/^BASE_DIR = os.path.dirname(os.path.abspath(__file__))$/;"	v
BASE_DIR	test_semseg.py	/^BASE_DIR = os.path.dirname(os.path.abspath(__file__))$/;"	v
BASE_DIR	train_cls.py	/^BASE_DIR = os.path.dirname(os.path.abspath(__file__))$/;"	v
BASE_DIR	train_partseg.py	/^BASE_DIR = os.path.dirname(os.path.abspath(__file__))$/;"	v
BASE_DIR	train_semseg.py	/^BASE_DIR = os.path.dirname(os.path.abspath(__file__))$/;"	v
BASE_DIR	visualizer/pc_utils.py	/^BASE_DIR = os.path.dirname(os.path.abspath(__file__))$/;"	v
BASE_DIR	visualizer/show3d_balls.py	/^BASE_DIR = os.path.dirname(os.path.abspath(__file__))$/;"	v
DATA_PATH	data_utils/indoor3d_util.py	/^DATA_PATH = os.path.join(ROOT_DIR, 'data','s3dis', 'Stanford3dDataset_v1.2_Aligned_Version')$/;"	v
DataLoader	data_utils/ModelNetDataLoader.py	/^    DataLoader = torch.utils.data.DataLoader(data, batch_size=12, shuffle=True)$/;"	v
ModelNetDataLoader	data_utils/ModelNetDataLoader.py	/^class ModelNetDataLoader(Dataset):$/;"	c
PartNormalDataset	data_utils/ShapeNetDataLoader.py	/^class PartNormalDataset(Dataset):$/;"	c
PlyData	visualizer/plyfile.py	/^class PlyData(object):$/;"	c
PlyElement	visualizer/plyfile.py	/^class PlyElement(object):$/;"	c
PlyListProperty	visualizer/plyfile.py	/^class PlyListProperty(PlyProperty):$/;"	c
PlyParseError	visualizer/plyfile.py	/^class PlyParseError(Exception):$/;"	c
PlyProperty	visualizer/plyfile.py	/^class PlyProperty(object):$/;"	c
PointInfo	visualizer/render_balls_so.cpp	/^struct PointInfo{$/;"	s	file:
PointNetEncoder	models/pointnet.py	/^class PointNetEncoder(nn.Module):$/;"	c
PointNetFeaturePropagation	models/pointnet_util.py	/^class PointNetFeaturePropagation(nn.Module):$/;"	c
PointNetSetAbstraction	models/pointnet_util.py	/^class PointNetSetAbstraction(nn.Module):$/;"	c
PointNetSetAbstractionMsg	models/pointnet_util.py	/^class PointNetSetAbstractionMsg(nn.Module):$/;"	c
ROOT_DIR	data_utils/collect_indoor3d_data.py	/^ROOT_DIR = os.path.dirname(BASE_DIR)$/;"	v
ROOT_DIR	data_utils/indoor3d_util.py	/^ROOT_DIR = os.path.dirname(BASE_DIR)$/;"	v
ROOT_DIR	test_cls.py	/^ROOT_DIR = BASE_DIR$/;"	v
ROOT_DIR	test_partseg.py	/^ROOT_DIR = BASE_DIR$/;"	v
ROOT_DIR	test_semseg.py	/^ROOT_DIR = BASE_DIR$/;"	v
ROOT_DIR	train_cls.py	/^ROOT_DIR = BASE_DIR$/;"	v
ROOT_DIR	train_partseg.py	/^ROOT_DIR = BASE_DIR$/;"	v
ROOT_DIR	train_semseg.py	/^ROOT_DIR = BASE_DIR$/;"	v
S3DISDataset	data_utils/S3DISDataLoader.py	/^class S3DISDataset(Dataset):$/;"	c
STN3d	models/pointnet.py	/^class STN3d(nn.Module):$/;"	c
STNkd	models/pointnet.py	/^class STNkd(nn.Module):$/;"	c
ScannetDatasetWholeScene	data_utils/S3DISDataLoader.py	/^class ScannetDatasetWholeScene():$/;"	c
_FLOAT_EPS_4	visualizer/eulerangles.py	/^_FLOAT_EPS_4 = np.finfo(float).eps * 4.0$/;"	v
__contains__	visualizer/plyfile.py	/^    def __contains__(self, name):$/;"	m	class:PlyData	file:
__getitem__	data_utils/ModelNetDataLoader.py	/^    def __getitem__(self, index):$/;"	m	class:ModelNetDataLoader	file:
__getitem__	data_utils/S3DISDataLoader.py	/^    def __getitem__(self, idx):$/;"	m	class:S3DISDataset	file:
__getitem__	data_utils/S3DISDataLoader.py	/^    def __getitem__(self, index):$/;"	m	class:ScannetDatasetWholeScene	file:
__getitem__	data_utils/ShapeNetDataLoader.py	/^    def __getitem__(self, index):$/;"	m	class:PartNormalDataset	file:
__getitem__	visualizer/plyfile.py	/^    def __getitem__(self, key):$/;"	m	class:PlyElement	file:
__getitem__	visualizer/plyfile.py	/^    def __getitem__(self, name):$/;"	m	class:PlyData	file:
__init__	data_utils/ModelNetDataLoader.py	/^    def __init__(self, root,  npoint=1024, split='train', uniform=False, normal_channel=True, cache_size=15000):$/;"	m	class:ModelNetDataLoader
__init__	data_utils/S3DISDataLoader.py	/^    def __init__(self, root, block_points=4096, split='test', test_area=5, stride=0.5, block_size=1.0, padding=0.001):$/;"	m	class:ScannetDatasetWholeScene
__init__	data_utils/S3DISDataLoader.py	/^    def __init__(self, split='train', data_root='trainval_fullarea', num_point=4096, test_area=5, block_size=1.0, sample_rate=1.0, transform=None):$/;"	m	class:S3DISDataset
__init__	data_utils/ShapeNetDataLoader.py	/^    def __init__(self,root = '.\/data\/shapenetcore_partanno_segmentation_benchmark_v0_normal', npoints=2500, split='train', class_choice=None, normal_channel=False):$/;"	m	class:PartNormalDataset
__init__	models/pointnet.py	/^    def __init__(self, channel):$/;"	m	class:STN3d
__init__	models/pointnet.py	/^    def __init__(self, global_feat=True, feature_transform=False, channel=3):$/;"	m	class:PointNetEncoder
__init__	models/pointnet.py	/^    def __init__(self, k=64):$/;"	m	class:STNkd
__init__	models/pointnet2_cls_msg.py	/^    def __init__(self):$/;"	m	class:get_loss
__init__	models/pointnet2_cls_msg.py	/^    def __init__(self,num_class,normal_channel=True):$/;"	m	class:get_model
__init__	models/pointnet2_cls_ssg.py	/^    def __init__(self):$/;"	m	class:get_loss
__init__	models/pointnet2_cls_ssg.py	/^    def __init__(self,num_class,normal_channel=True):$/;"	m	class:get_model
__init__	models/pointnet2_part_seg_msg.py	/^    def __init__(self):$/;"	m	class:get_loss
__init__	models/pointnet2_part_seg_msg.py	/^    def __init__(self, num_classes, normal_channel=False):$/;"	m	class:get_model
__init__	models/pointnet2_part_seg_ssg.py	/^    def __init__(self):$/;"	m	class:get_loss
__init__	models/pointnet2_part_seg_ssg.py	/^    def __init__(self, num_classes, normal_channel=False):$/;"	m	class:get_model
__init__	models/pointnet2_sem_seg.py	/^    def __init__(self):$/;"	m	class:get_loss
__init__	models/pointnet2_sem_seg.py	/^    def __init__(self, num_classes):$/;"	m	class:get_model
__init__	models/pointnet2_sem_seg_msg.py	/^    def __init__(self):$/;"	m	class:get_loss
__init__	models/pointnet2_sem_seg_msg.py	/^    def __init__(self, num_classes):$/;"	m	class:get_model
__init__	models/pointnet_cls.py	/^    def __init__(self, k=40, normal_channel=True):$/;"	m	class:get_model
__init__	models/pointnet_cls.py	/^    def __init__(self, mat_diff_loss_scale=0.001):$/;"	m	class:get_loss
__init__	models/pointnet_part_seg.py	/^    def __init__(self, mat_diff_loss_scale=0.001):$/;"	m	class:get_loss
__init__	models/pointnet_part_seg.py	/^    def __init__(self, part_num=50, normal_channel=True):$/;"	m	class:get_model
__init__	models/pointnet_sem_seg.py	/^    def __init__(self, mat_diff_loss_scale=0.001):$/;"	m	class:get_loss
__init__	models/pointnet_sem_seg.py	/^    def __init__(self, num_class, with_rgb=True):$/;"	m	class:get_model
__init__	models/pointnet_util.py	/^    def __init__(self, in_channel, mlp):$/;"	m	class:PointNetFeaturePropagation
__init__	models/pointnet_util.py	/^    def __init__(self, npoint, radius, nsample, in_channel, mlp, group_all):$/;"	m	class:PointNetSetAbstraction
__init__	models/pointnet_util.py	/^    def __init__(self, npoint, radius_list, nsample_list, in_channel, mlp_list):$/;"	m	class:PointNetSetAbstractionMsg
__init__	visualizer/plyfile.py	/^    def __init__(self, elements=[], text=False, byte_order='=',$/;"	m	class:PlyData
__init__	visualizer/plyfile.py	/^    def __init__(self, message, element=None, row=None, prop=None):$/;"	m	class:PlyParseError
__init__	visualizer/plyfile.py	/^    def __init__(self, name, len_dtype, val_dtype):$/;"	m	class:PlyListProperty
__init__	visualizer/plyfile.py	/^    def __init__(self, name, properties, count, comments=[]):$/;"	m	class:PlyElement
__init__	visualizer/plyfile.py	/^    def __init__(self, name, val_dtype):$/;"	m	class:PlyProperty
__iter__	visualizer/plyfile.py	/^    def __iter__(self):$/;"	m	class:PlyData	file:
__len__	data_utils/ModelNetDataLoader.py	/^    def __len__(self):$/;"	m	class:ModelNetDataLoader	file:
__len__	data_utils/S3DISDataLoader.py	/^    def __len__(self):$/;"	m	class:S3DISDataset	file:
__len__	data_utils/S3DISDataLoader.py	/^    def __len__(self):$/;"	m	class:ScannetDatasetWholeScene	file:
__len__	data_utils/ShapeNetDataLoader.py	/^    def __len__(self):$/;"	m	class:PartNormalDataset	file:
__len__	visualizer/plyfile.py	/^    def __len__(self):$/;"	m	class:PlyData	file:
__repr__	visualizer/plyfile.py	/^    def __repr__(self):$/;"	m	class:PlyData	file:
__repr__	visualizer/plyfile.py	/^    def __repr__(self):$/;"	m	class:PlyElement	file:
__repr__	visualizer/plyfile.py	/^    def __repr__(self):$/;"	m	class:PlyListProperty	file:
__repr__	visualizer/plyfile.py	/^    def __repr__(self):$/;"	m	class:PlyParseError	file:
__repr__	visualizer/plyfile.py	/^    def __repr__(self):$/;"	m	class:PlyProperty	file:
__setitem__	visualizer/plyfile.py	/^    def __setitem__(self, key, value):$/;"	m	class:PlyElement	file:
__str__	visualizer/plyfile.py	/^    def __str__(self):$/;"	m	class:PlyData	file:
__str__	visualizer/plyfile.py	/^    def __str__(self):$/;"	m	class:PlyElement	file:
__str__	visualizer/plyfile.py	/^    def __str__(self):$/;"	m	class:PlyListProperty	file:
__str__	visualizer/plyfile.py	/^    def __str__(self):$/;"	m	class:PlyProperty	file:
_byte_order_map	visualizer/plyfile.py	/^_byte_order_map = {$/;"	v
_byte_order_reverse	visualizer/plyfile.py	/^_byte_order_reverse = {$/;"	v
_check_name	visualizer/plyfile.py	/^    def _check_name(self):$/;"	m	class:PlyElement
_check_name	visualizer/plyfile.py	/^    def _check_name(self):$/;"	m	class:PlyProperty
_check_sanity	visualizer/plyfile.py	/^    def _check_sanity(self):$/;"	m	class:PlyElement
_data_type_relation	visualizer/plyfile.py	/^_data_type_relation = [$/;"	v
_data_type_reverse	visualizer/plyfile.py	/^_data_type_reverse = dict((b, a) for (a, b) in _data_type_relation)$/;"	v
_data_types	visualizer/plyfile.py	/^_data_types = dict(_data_type_relation)$/;"	v
_from_fields	visualizer/plyfile.py	/^    def _from_fields(self, fields):$/;"	m	class:PlyListProperty
_from_fields	visualizer/plyfile.py	/^    def _from_fields(self, fields):$/;"	m	class:PlyProperty
_get_byte_order	visualizer/plyfile.py	/^    def _get_byte_order(self):$/;"	m	class:PlyData
_get_data	visualizer/plyfile.py	/^    def _get_data(self):$/;"	m	class:PlyElement
_get_elements	visualizer/plyfile.py	/^    def _get_elements(self):$/;"	m	class:PlyData
_get_item	data_utils/ModelNetDataLoader.py	/^    def _get_item(self, index):$/;"	m	class:ModelNetDataLoader
_get_len_dtype	visualizer/plyfile.py	/^    def _get_len_dtype(self):$/;"	m	class:PlyListProperty
_get_properties	visualizer/plyfile.py	/^    def _get_properties(self):$/;"	m	class:PlyElement
_get_val_dtype	visualizer/plyfile.py	/^    def _get_val_dtype(self):$/;"	m	class:PlyProperty
_index	visualizer/plyfile.py	/^    def _index(self):$/;"	m	class:PlyData
_index	visualizer/plyfile.py	/^    def _index(self):$/;"	m	class:PlyElement
_lookup_type	visualizer/plyfile.py	/^def _lookup_type(type_str):$/;"	f
_native_byte_order	visualizer/plyfile.py	/^_native_byte_order = {'little': '<', 'big': '>'}[_byteorder]$/;"	v
_open_stream	visualizer/plyfile.py	/^def _open_stream(stream, read_or_write):$/;"	f
_parse_header	visualizer/plyfile.py	/^    def _parse_header(stream):$/;"	m	class:PlyData
_parse_multi	visualizer/plyfile.py	/^    def _parse_multi(header_lines):$/;"	m	class:PlyElement
_parse_one	visualizer/plyfile.py	/^    def _parse_one(line):$/;"	m	class:PlyProperty
_parse_one	visualizer/plyfile.py	/^    def _parse_one(lines):$/;"	m	class:PlyElement
_range	visualizer/plyfile.py	/^    _range = range$/;"	v
_range	visualizer/plyfile.py	/^    _range = xrange$/;"	v
_read	visualizer/plyfile.py	/^    def _read(self, stream, text, byte_order):$/;"	m	class:PlyElement
_read_bin	visualizer/plyfile.py	/^    def _read_bin(self, stream, byte_order):$/;"	m	class:PlyElement
_read_bin	visualizer/plyfile.py	/^    def _read_bin(self, stream, byte_order):$/;"	m	class:PlyListProperty
_read_bin	visualizer/plyfile.py	/^    def _read_bin(self, stream, byte_order):$/;"	m	class:PlyProperty
_read_txt	visualizer/plyfile.py	/^    def _read_txt(self, stream):$/;"	m	class:PlyElement
_set_byte_order	visualizer/plyfile.py	/^    def _set_byte_order(self, byte_order):$/;"	m	class:PlyData
_set_data	visualizer/plyfile.py	/^    def _set_data(self, data):$/;"	m	class:PlyElement
_set_elements	visualizer/plyfile.py	/^    def _set_elements(self, elements):$/;"	m	class:PlyData
_set_len_dtype	visualizer/plyfile.py	/^    def _set_len_dtype(self, len_dtype):$/;"	m	class:PlyListProperty
_set_properties	visualizer/plyfile.py	/^    def _set_properties(self, properties):$/;"	m	class:PlyElement
_set_val_dtype	visualizer/plyfile.py	/^    def _set_val_dtype(self, val_dtype):$/;"	m	class:PlyProperty
_split_line	visualizer/plyfile.py	/^def _split_line(line, n):$/;"	f
_to_fields	visualizer/plyfile.py	/^    def _to_fields(self, data):$/;"	m	class:PlyListProperty
_to_fields	visualizer/plyfile.py	/^    def _to_fields(self, data):$/;"	m	class:PlyProperty
_types_list	visualizer/plyfile.py	/^_types_list = []$/;"	v
_types_set	visualizer/plyfile.py	/^_types_set = set()$/;"	v
_write	visualizer/plyfile.py	/^    def _write(self, stream, text, byte_order):$/;"	m	class:PlyElement
_write_bin	visualizer/plyfile.py	/^    def _write_bin(self, data, stream, byte_order):$/;"	m	class:PlyListProperty
_write_bin	visualizer/plyfile.py	/^    def _write_bin(self, data, stream, byte_order):$/;"	m	class:PlyProperty
_write_bin	visualizer/plyfile.py	/^    def _write_bin(self, stream, byte_order):$/;"	m	class:PlyElement
_write_txt	visualizer/plyfile.py	/^    def _write_txt(self, stream):$/;"	m	class:PlyElement
add_vote	test_semseg.py	/^def add_vote(vote_label_pool, point_idx, pred_label, weight):$/;"	f
angle_axis2euler	visualizer/eulerangles.py	/^def angle_axis2euler(theta, vector, is_normalized=False):$/;"	f
anno_paths	data_utils/collect_indoor3d_data.py	/^anno_paths = [line.rstrip() for line in open(os.path.join(BASE_DIR, 'meta\/anno_paths.txt'))]$/;"	v
anno_paths	data_utils/collect_indoor3d_data.py	/^anno_paths = [os.path.join(DATA_PATH, p) for p in anno_paths]$/;"	v
args	test_cls.py	/^    args = parse_args()$/;"	v
b	visualizer/render_balls_so.cpp	/^	float r,g,b;$/;"	m	struct:PointInfo	file:
bbox_label_to_obj	data_utils/indoor3d_util.py	/^def bbox_label_to_obj(input_filename, out_filename_prefix, easy_view=False):$/;"	f
bbox_label_to_obj_room	data_utils/indoor3d_util.py	/^def bbox_label_to_obj_room(input_filename, out_filename_prefix, easy_view=False, permute=None, center=False, exclude_table=False):$/;"	f
bn_momentum_adjust	train_partseg.py	/^    def bn_momentum_adjust(m, momentum):$/;"	f	function:main
bn_momentum_adjust	train_semseg.py	/^    def bn_momentum_adjust(m, momentum):$/;"	f	function:main
byte_order	visualizer/plyfile.py	/^    byte_order = property(_get_byte_order, _set_byte_order)$/;"	v	class:PlyData
changed	visualizer/show3d_balls.py	/^changed = True$/;"	v
class2label	test_semseg.py	/^class2label = {cls: i for i,cls in enumerate(classes)}$/;"	v
class2label	train_semseg.py	/^class2label = {cls: i for i,cls in enumerate(classes)}$/;"	v
classes	test_semseg.py	/^classes = ['ceiling','floor','wall','beam','column','window','door','table','chair','sofa','bookcase','board','clutter']$/;"	v
classes	train_semseg.py	/^classes = ['ceiling','floor','wall','beam','column','window','door','table','chair','sofa','bookcase','board','clutter']$/;"	v
collect_bounding_box	data_utils/indoor3d_util.py	/^def collect_bounding_box(anno_path, out_filename):$/;"	f
collect_point_bounding_box	data_utils/indoor3d_util.py	/^def collect_point_bounding_box(anno_path, out_filename, file_format):$/;"	f
collect_point_label	data_utils/indoor3d_util.py	/^def collect_point_label(anno_path, out_filename, file_format='txt'):$/;"	f
count	visualizer/plyfile.py	/^    def count(self):$/;"	m	class:PlyElement
data	data_utils/ModelNetDataLoader.py	/^    data = ModelNetDataLoader('\/data\/modelnet40_normal_resampled\/',split='train', uniform=False, normal_channel=True,)$/;"	v
data	visualizer/plyfile.py	/^    data = property(_get_data, _set_data)$/;"	v	class:PlyElement
data_root	data_utils/S3DISDataLoader.py	/^    data_root = '\/data\/yxu\/PointNonLocal\/data\/stanford_indoor3d\/'$/;"	v
data_to_obj	data_utils/indoor3d_util.py	/^def data_to_obj(data,name='example.obj',no_wall=True):$/;"	f
describe	visualizer/plyfile.py	/^    def describe(data, name, len_types={}, val_types={},$/;"	m	class:PlyElement
dll	visualizer/show3d_balls.py	/^dll = np.ctypeslib.load_library(os.path.join(BASE_DIR, 'render_balls_so'), '.')$/;"	v
draw_point_cloud	visualizer/pc_utils.py	/^def draw_point_cloud(input_points, canvasSize=500, space=200, diameter=25,$/;"	f
dtype	visualizer/plyfile.py	/^    def dtype(self, byte_order='='):$/;"	m	class:PlyElement
dtype	visualizer/plyfile.py	/^    def dtype(self, byte_order='='):$/;"	m	class:PlyListProperty
dtype	visualizer/plyfile.py	/^    def dtype(self, byte_order='='):$/;"	m	class:PlyProperty
elements	data_utils/collect_indoor3d_data.py	/^        elements = anno_path.split('\/')$/;"	v
elements	visualizer/plyfile.py	/^    elements = property(_get_elements, _set_elements)$/;"	v	class:PlyData
euler2angle_axis	visualizer/eulerangles.py	/^def euler2angle_axis(z=0, y=0, x=0):$/;"	f
euler2mat	visualizer/eulerangles.py	/^def euler2mat(z=0, y=0, x=0):$/;"	f
euler2quat	visualizer/eulerangles.py	/^def euler2quat(z=0, y=0, x=0):$/;"	f
farthest_point_sample	data_utils/ModelNetDataLoader.py	/^def farthest_point_sample(point, npoint):$/;"	f
farthest_point_sample	models/pointnet_util.py	/^def farthest_point_sample(xyz, npoint):$/;"	f
feature_transform_reguliarzer	models/pointnet.py	/^def feature_transform_reguliarzer(trans):$/;"	f
forward	models/pointnet.py	/^    def forward(self, x):$/;"	m	class:PointNetEncoder
forward	models/pointnet.py	/^    def forward(self, x):$/;"	m	class:STN3d
forward	models/pointnet.py	/^    def forward(self, x):$/;"	m	class:STNkd
forward	models/pointnet2_cls_msg.py	/^    def forward(self, pred, target, trans_feat):$/;"	m	class:get_loss
forward	models/pointnet2_cls_msg.py	/^    def forward(self, xyz):$/;"	m	class:get_model
forward	models/pointnet2_cls_ssg.py	/^    def forward(self, pred, target, trans_feat):$/;"	m	class:get_loss
forward	models/pointnet2_cls_ssg.py	/^    def forward(self, xyz):$/;"	m	class:get_model
forward	models/pointnet2_part_seg_msg.py	/^    def forward(self, pred, target, trans_feat):$/;"	m	class:get_loss
forward	models/pointnet2_part_seg_msg.py	/^    def forward(self, xyz, cls_label):$/;"	m	class:get_model
forward	models/pointnet2_part_seg_ssg.py	/^    def forward(self, pred, target, trans_feat):$/;"	m	class:get_loss
forward	models/pointnet2_part_seg_ssg.py	/^    def forward(self, xyz, cls_label):$/;"	m	class:get_model
forward	models/pointnet2_sem_seg.py	/^    def forward(self, pred, target, trans_feat, weight):$/;"	m	class:get_loss
forward	models/pointnet2_sem_seg.py	/^    def forward(self, xyz):$/;"	m	class:get_model
forward	models/pointnet2_sem_seg_msg.py	/^    def forward(self, pred, target, trans_feat, weight):$/;"	m	class:get_loss
forward	models/pointnet2_sem_seg_msg.py	/^    def forward(self, xyz):$/;"	m	class:get_model
forward	models/pointnet_cls.py	/^    def forward(self, pred, target, trans_feat):$/;"	m	class:get_loss
forward	models/pointnet_cls.py	/^    def forward(self, x):$/;"	m	class:get_model
forward	models/pointnet_part_seg.py	/^    def forward(self, point_cloud, label):$/;"	m	class:get_model
forward	models/pointnet_part_seg.py	/^    def forward(self, pred, target, trans_feat):$/;"	m	class:get_loss
forward	models/pointnet_sem_seg.py	/^    def forward(self, pred, target, trans_feat, weight):$/;"	m	class:get_loss
forward	models/pointnet_sem_seg.py	/^    def forward(self, x):$/;"	m	class:get_model
forward	models/pointnet_util.py	/^    def forward(self, xyz, points):$/;"	m	class:PointNetSetAbstraction
forward	models/pointnet_util.py	/^    def forward(self, xyz, points):$/;"	m	class:PointNetSetAbstractionMsg
forward	models/pointnet_util.py	/^    def forward(self, xyz1, xyz2, points1, points2):$/;"	m	class:PointNetFeaturePropagation
g	visualizer/render_balls_so.cpp	/^	float r,g,b;$/;"	m	struct:PointInfo	file:
g_class2color	data_utils/indoor3d_util.py	/^g_class2color = {'ceiling':	[0,255,0],$/;"	v
g_class2label	data_utils/indoor3d_util.py	/^g_class2label = {cls: i for i,cls in enumerate(g_classes)}$/;"	v
g_classes	data_utils/indoor3d_util.py	/^g_classes = [x.rstrip() for x in open(os.path.join(BASE_DIR, 'meta\/class_names.txt'))]$/;"	v
g_easy_view_labels	data_utils/indoor3d_util.py	/^g_easy_view_labels = [7,8,9,10,11,1]$/;"	v
g_label2color	data_utils/indoor3d_util.py	/^g_label2color = {g_classes.index(cls): g_class2color[cls] for cls in g_classes}$/;"	v
get_loss	models/pointnet2_cls_msg.py	/^class get_loss(nn.Module):$/;"	c
get_loss	models/pointnet2_cls_ssg.py	/^class get_loss(nn.Module):$/;"	c
get_loss	models/pointnet2_part_seg_msg.py	/^class get_loss(nn.Module):$/;"	c
get_loss	models/pointnet2_part_seg_ssg.py	/^class get_loss(nn.Module):$/;"	c
get_loss	models/pointnet2_sem_seg.py	/^class get_loss(nn.Module):$/;"	c
get_loss	models/pointnet2_sem_seg_msg.py	/^class get_loss(nn.Module):$/;"	c
get_loss	models/pointnet_cls.py	/^class get_loss(torch.nn.Module):$/;"	c
get_loss	models/pointnet_part_seg.py	/^class get_loss(torch.nn.Module):$/;"	c
get_loss	models/pointnet_sem_seg.py	/^class get_loss(torch.nn.Module):$/;"	c
get_model	models/pointnet2_cls_msg.py	/^class get_model(nn.Module):$/;"	c
get_model	models/pointnet2_cls_ssg.py	/^class get_model(nn.Module):$/;"	c
get_model	models/pointnet2_part_seg_msg.py	/^class get_model(nn.Module):$/;"	c
get_model	models/pointnet2_part_seg_ssg.py	/^class get_model(nn.Module):$/;"	c
get_model	models/pointnet2_sem_seg.py	/^class get_model(nn.Module):$/;"	c
get_model	models/pointnet2_sem_seg_msg.py	/^class get_model(nn.Module):$/;"	c
get_model	models/pointnet_cls.py	/^class get_model(nn.Module):$/;"	c
get_model	models/pointnet_part_seg.py	/^class get_model(nn.Module):$/;"	c
get_model	models/pointnet_sem_seg.py	/^class get_model(nn.Module):$/;"	c
header	visualizer/plyfile.py	/^    def header(self):$/;"	m	class:PlyData
header	visualizer/plyfile.py	/^    def header(self):$/;"	m	class:PlyElement
index_points	models/pointnet_util.py	/^def index_points(points, idx):$/;"	f
jitter_point_cloud	provider.py	/^def jitter_point_cloud(batch_data, sigma=0.01, clip=0.05):$/;"	f
len_dtype	visualizer/plyfile.py	/^    len_dtype = property(_get_len_dtype, _set_len_dtype)$/;"	v	class:PlyListProperty
list_dtype	visualizer/plyfile.py	/^    def list_dtype(self, byte_order='='):$/;"	m	class:PlyListProperty
log_string	test_cls.py	/^    def log_string(str):$/;"	f	function:main
log_string	test_partseg.py	/^    def log_string(str):$/;"	f	function:main
log_string	test_semseg.py	/^    def log_string(str):$/;"	f	function:main
log_string	train_cls.py	/^    def log_string(str):$/;"	f	function:main
log_string	train_partseg.py	/^    def log_string(str):$/;"	f	function:main
log_string	train_semseg.py	/^    def log_string(str):$/;"	f	function:main
main	test_cls.py	/^def main(args):$/;"	f
main	test_partseg.py	/^def main(args):$/;"	f
main	test_semseg.py	/^def main(args):$/;"	f
main	train_cls.py	/^def main(args):$/;"	f
main	train_partseg.py	/^def main(args):$/;"	f
main	train_semseg.py	/^def main(args):$/;"	f
make2d	visualizer/plyfile.py	/^def make2d(array, cols=None, dtype=None):$/;"	f
manual_seed	data_utils/S3DISDataLoader.py	/^    manual_seed = 123$/;"	v
mat2euler	visualizer/eulerangles.py	/^def mat2euler(M, cy_thresh=None):$/;"	f
model	models/pointnet2_sem_seg.py	/^    model = get_model(13)$/;"	v	class:get_loss
model	models/pointnet2_sem_seg_msg.py	/^    model = get_model(13)$/;"	v	class:get_loss
model	models/pointnet_sem_seg.py	/^    model = get_model(13, with_rgb=False)$/;"	v	class:get_loss
name	visualizer/plyfile.py	/^    def name(self):$/;"	m	class:PlyElement
name	visualizer/plyfile.py	/^    def name(self):$/;"	m	class:PlyProperty
normalize_data	provider.py	/^def normalize_data(batch_data):$/;"	f
onmouse	visualizer/show3d_balls.py	/^def onmouse(*args):$/;"	f
out_filename	data_utils/collect_indoor3d_data.py	/^        out_filename = elements[-3]+'_'+elements[-2]+'.npy' # Area_1_hallway_1.npy$/;"	v
output_folder	data_utils/collect_indoor3d_data.py	/^output_folder = os.path.join(ROOT_DIR, 'data\/stanford_indoor3d')$/;"	v
parse_args	test_cls.py	/^def parse_args():$/;"	f
parse_args	test_partseg.py	/^def parse_args():$/;"	f
parse_args	test_semseg.py	/^def parse_args():$/;"	f
parse_args	train_cls.py	/^def parse_args():$/;"	f
parse_args	train_partseg.py	/^def parse_args():$/;"	f
parse_args	train_semseg.py	/^def parse_args():$/;"	f
pc_normalize	data_utils/ModelNetDataLoader.py	/^def pc_normalize(pc):$/;"	f
pc_normalize	data_utils/ShapeNetDataLoader.py	/^def pc_normalize(pc):$/;"	f
pc_normalize	models/pointnet_util.py	/^def pc_normalize(pc):$/;"	f
ply_property	visualizer/plyfile.py	/^    def ply_property(self, name):$/;"	m	class:PlyElement
point_cloud_three_views	visualizer/pc_utils.py	/^def point_cloud_three_views(points):$/;"	f
point_cloud_three_views_demo	visualizer/pc_utils.py	/^def point_cloud_three_views_demo():$/;"	f
point_cloud_to_volume	visualizer/pc_utils.py	/^def point_cloud_to_volume(points, vsize, radius=1.0):$/;"	f
point_cloud_to_volume_batch	visualizer/pc_utils.py	/^def point_cloud_to_volume_batch(point_clouds, vsize=12, radius=1.0, flatten=True):$/;"	f
point_data	data_utils/S3DISDataLoader.py	/^    point_data = S3DISDataset(split='train', data_root=data_root, num_point=num_point, test_area=test_area, block_size=block_size, sample_rate=sample_rate, transform=None)$/;"	v
point_label_to_obj	data_utils/indoor3d_util.py	/^def point_label_to_obj(input_filename, out_filename, label_color=True, easy_view=False, no_wall=False):$/;"	f
properties	visualizer/plyfile.py	/^    properties = property(_get_properties, _set_properties)$/;"	v	class:PlyElement
pyplot_draw_point_cloud	visualizer/pc_utils.py	/^def pyplot_draw_point_cloud(points, output_filename):$/;"	f
pyplot_draw_volume	visualizer/pc_utils.py	/^def pyplot_draw_volume(vol, output_filename):$/;"	f
quat2euler	visualizer/eulerangles.py	/^def quat2euler(q):$/;"	f
query_ball_point	models/pointnet_util.py	/^def query_ball_point(radius, nsample, xyz, new_xyz):$/;"	f
r	visualizer/render_balls_so.cpp	/^	float r,g,b;$/;"	m	struct:PointInfo	file:
random_point_dropout	provider.py	/^def random_point_dropout(batch_pc, max_dropout_ratio=0.875):$/;"	f
random_scale_point_cloud	provider.py	/^def random_scale_point_cloud(batch_data, scale_low=0.8, scale_high=1.25):$/;"	f
read	visualizer/plyfile.py	/^    def read(stream):$/;"	m	class:PlyData
read_ply	visualizer/pc_utils.py	/^def read_ply(filename):$/;"	f
render	visualizer/show3d_balls.py	/^    def render():$/;"	f	function:showpoints
render_ball	visualizer/render_balls_so.cpp	/^void render_ball(int h,int w,unsigned char * show,int n,int * xyzs,float * c0,float * c1,float * c2,int r){$/;"	f
room2blocks	data_utils/indoor3d_util.py	/^def room2blocks(data, label, num_point, block_size=1.0, stride=1.0,$/;"	f
room2blocks_plus	data_utils/indoor3d_util.py	/^def room2blocks_plus(data_label, num_point, block_size, stride,$/;"	f
room2blocks_plus_normalized	data_utils/indoor3d_util.py	/^def room2blocks_plus_normalized(data_label, num_point, block_size, stride,$/;"	f
room2blocks_wrapper	data_utils/indoor3d_util.py	/^def room2blocks_wrapper(data_label_filename, num_point, block_size=1.0, stride=1.0,$/;"	f
room2blocks_wrapper_normalized	data_utils/indoor3d_util.py	/^def room2blocks_wrapper_normalized(data_label_filename, num_point, block_size=1.0, stride=1.0,$/;"	f
room2samples	data_utils/indoor3d_util.py	/^def room2samples(data, label, sample_num_point):$/;"	f
room2samples_plus_normalized	data_utils/indoor3d_util.py	/^def room2samples_plus_normalized(data_label, num_point):$/;"	f
room2samples_wrapper_normalized	data_utils/indoor3d_util.py	/^def room2samples_wrapper_normalized(data_label_filename, num_point):$/;"	f
rotate_perturbation_point_cloud	provider.py	/^def rotate_perturbation_point_cloud(batch_data, angle_sigma=0.06, angle_clip=0.18):$/;"	f
rotate_perturbation_point_cloud_with_normal	provider.py	/^def rotate_perturbation_point_cloud_with_normal(batch_data, angle_sigma=0.06, angle_clip=0.18):$/;"	f
rotate_point_cloud	provider.py	/^def rotate_point_cloud(batch_data):$/;"	f
rotate_point_cloud_by_angle	provider.py	/^def rotate_point_cloud_by_angle(batch_data, rotation_angle):$/;"	f
rotate_point_cloud_by_angle_with_normal	provider.py	/^def rotate_point_cloud_by_angle_with_normal(batch_data, rotation_angle):$/;"	f
rotate_point_cloud_with_normal	provider.py	/^def rotate_point_cloud_with_normal(batch_xyz_normal):$/;"	f
rotate_point_cloud_z	provider.py	/^def rotate_point_cloud_z(batch_data):$/;"	f
sample_and_group	models/pointnet_util.py	/^def sample_and_group(npoint, radius, nsample, xyz, points, returnfps=False):$/;"	f
sample_and_group_all	models/pointnet_util.py	/^def sample_and_group_all(xyz, points):$/;"	f
sample_data	data_utils/indoor3d_util.py	/^def sample_data(data, num_sample):$/;"	f
sample_data_label	data_utils/indoor3d_util.py	/^def sample_data_label(data, label, num_sample):$/;"	f
seg_classes	test_partseg.py	/^seg_classes = {'Earphone': [16, 17, 18], 'Motorbike': [30, 31, 32, 33, 34, 35], 'Rocket': [41, 42, 43], 'Car': [8, 9, 10, 11], 'Laptop': [28, 29], 'Cap': [6, 7], 'Skateboard': [44, 45, 46], 'Mug': [36, 37], 'Guitar': [19, 20, 21], 'Bag': [4, 5], 'Lamp': [24, 25, 26, 27], 'Table': [47, 48, 49], 'Airplane': [0, 1, 2, 3], 'Pistol': [38, 39, 40], 'Chair': [12, 13, 14, 15], 'Knife': [22, 23]}$/;"	v
seg_classes	test_semseg.py	/^seg_classes = class2label$/;"	v
seg_classes	train_partseg.py	/^seg_classes = {'Earphone': [16, 17, 18], 'Motorbike': [30, 31, 32, 33, 34, 35], 'Rocket': [41, 42, 43], 'Car': [8, 9, 10, 11], 'Laptop': [28, 29], 'Cap': [6, 7], 'Skateboard': [44, 45, 46], 'Mug': [36, 37], 'Guitar': [19, 20, 21], 'Bag': [4, 5], 'Lamp': [24, 25, 26, 27], 'Table': [47, 48, 49], 'Airplane': [0, 1, 2, 3], 'Pistol': [38, 39, 40], 'Chair': [12, 13, 14, 15], 'Knife': [22, 23]}$/;"	v
seg_classes	train_semseg.py	/^seg_classes = class2label$/;"	v
seg_label_to_cat	test_partseg.py	/^seg_label_to_cat = {} # {0:Airplane, 1:Airplane, ...49:Table}$/;"	v
seg_label_to_cat	test_semseg.py	/^seg_label_to_cat = {}$/;"	v
seg_label_to_cat	train_partseg.py	/^seg_label_to_cat = {} # {0:Airplane, 1:Airplane, ...49:Table}$/;"	v
seg_label_to_cat	train_semseg.py	/^seg_label_to_cat = {}$/;"	v
shift_point_cloud	provider.py	/^def shift_point_cloud(batch_data, shift_range=0.1):$/;"	f
showpoints	visualizer/show3d_balls.py	/^def showpoints(xyz, c_gt=None, c_pred=None, waittime=0, showrot=False, magnifyBlue=0, freezerot=False,$/;"	f
showsz	visualizer/show3d_balls.py	/^showsz = 800$/;"	v
shuffle_data	provider.py	/^def shuffle_data(data, labels):$/;"	f
shuffle_points	provider.py	/^def shuffle_points(batch_data):$/;"	f
square_distance	models/pointnet_util.py	/^def square_distance(src, dst):$/;"	f
test	test_cls.py	/^def test(model, loader, num_class=40, vote_num=1):$/;"	f
test	train_cls.py	/^def test(model, loader, num_class=40):$/;"	f
timeit	models/pointnet_util.py	/^def timeit(tag, t):$/;"	f
to_categorical	test_partseg.py	/^def to_categorical(y, num_classes):$/;"	f
to_categorical	train_partseg.py	/^def to_categorical(y, num_classes):$/;"	f
train_loader	data_utils/S3DISDataLoader.py	/^    train_loader = torch.utils.data.DataLoader(point_data, batch_size=16, shuffle=True, num_workers=16, pin_memory=True, worker_init_fn=worker_init_fn)$/;"	v
val_dtype	visualizer/plyfile.py	/^    val_dtype = property(_get_val_dtype, _set_val_dtype)$/;"	v	class:PlyProperty
volume_to_point_cloud	visualizer/pc_utils.py	/^def volume_to_point_cloud(vol):$/;"	f
weights_init	train_partseg.py	/^    def weights_init(m):$/;"	f	function:main
weights_init	train_semseg.py	/^    def weights_init(m):$/;"	f	function:main
worker_init_fn	data_utils/S3DISDataLoader.py	/^    def worker_init_fn(worker_id):$/;"	f
write	visualizer/plyfile.py	/^    def write(self, stream):$/;"	m	class:PlyData
write_ply	visualizer/pc_utils.py	/^def write_ply(points, filename, text=True):$/;"	f
x	visualizer/render_balls_so.cpp	/^	int x,y,z;$/;"	m	struct:PointInfo	file:
xyz	models/pointnet2_sem_seg.py	/^    xyz = torch.rand(6, 9, 2048)$/;"	v	class:get_loss
xyz	models/pointnet2_sem_seg_msg.py	/^    xyz = torch.rand(6, 9, 2048)$/;"	v	class:get_loss
xyz	models/pointnet_sem_seg.py	/^    xyz = torch.rand(12, 3, 2048)$/;"	v	class:get_loss
y	visualizer/render_balls_so.cpp	/^	int x,y,z;$/;"	m	struct:PointInfo	file:
z	visualizer/render_balls_so.cpp	/^	int x,y,z;$/;"	m	struct:PointInfo	file:
zoom	visualizer/show3d_balls.py	/^zoom = 1.0$/;"	v
